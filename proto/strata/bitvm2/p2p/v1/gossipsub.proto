syntax = "proto3";

package strata.bitvm2.p2p.v1;

// Used for the Stake Chain setup.
message StakeChainExchange {
  // Output number of pre stake tx.
  uint32 pre_stake_vout = 1;
  // Transaction hash of pre stake tx.
  bytes pre_stake_txid = 2;
  // Keys `Y_{i, j}`.
  repeated bytes checkpoint_pubkeys = 3;
  // WOTS PKs for each stake tx.
  repeated bytes stake_wots = 4;
  // Hashes for each stake tx.
  repeated bytes stake_hashes = 5;
  // Operator's funds prevouts for each stake tx.
  // There are to cover the dust outputs in each withdrawal request.
  // Composed of txid:vout as a flattened byte array.
  repeated bytes operator_funds = 6;
}

// Primarily used for the WOTS PKs for the Deposit.
message DepositSetupExchange {
  // 32-byte hash of some unique to deposit data.
  bytes scope = 1;
  // Some arbitrary payload which depends on the implementation.
  bytes payload = 2;
}

// Musig2 first-round (public) nonces exchange.
message Musig2NoncesExchange {
  // 32-byte hash of some unique to deposit data.
  bytes session_id = 1;
  // (Public) Nonces for each transaction.
  repeated bytes pub_nonces = 2;
}

// Musig2 second-round (partial) signatures exchange.
message Musig2SignaturesExchange {
  // 32-byte hash of some unique to deposit data.
  bytes session_id = 1;
  // (Partial) Signatures for each transaction.
  repeated bytes partial_sigs = 2;
}

// Catch-all message type for all messages.
message GossipsubMsg {
  oneof body {
    StakeChainExchange stake_chain = 1;
    DepositSetupExchange setup = 2;
    Musig2NoncesExchange nonce = 3;
    Musig2SignaturesExchange sigs = 4;
  }
  // Public key of the operator used for P2P message signing only.
  bytes key = 10;
  // Signature of concatenated content of body (without protobuf
  // serialization).
  bytes signature = 11;
}
