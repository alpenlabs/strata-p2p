name: lint

on:
  pull_request:
  merge_group:
  push:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

permissions: {}

jobs:
  extract-rust-version:
    name: Extract toolchain version
    runs-on: ubuntu-latest
    outputs:
      nightly-version: ${{ steps.extract-version.outputs.nightly-version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false

      - name: Extract Rust version
        id: extract-version
        uses: ./.github/actions/extract-rust-version

  clippy:
    name: clippy (feature matrix)
    runs-on: ubuntu-latest
    needs: extract-rust-version
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        include:
          # Non-BYOS single
          - name: non-byos | base
            features: ""
          - name: non-byos | gossipsub
            features: "gossipsub"
          - name: non-byos | request-response
            features: "request-response"
          - name: non-byos | quic
            features: "quic"
          - name: non-byos | kad
            features: "kad"
          # Non-BYOS dual
          - name: non-byos | gossipsub + request-response
            features: "gossipsub request-response"
          - name: non-byos | gossipsub + quic
            features: "gossipsub quic"
          - name: non-byos | gossipsub + kad
            features: "gossipsub kad"
          - name: non-byos | request-response + quic
            features: "request-response quic"
          - name: non-byos | request-response + kad
            features: "request-response kad"
          - name: non-byos | quic + kad
            features: "quic kad"
          # Non-BYOS triple
          - name: non-byos | gossipsub + request-response + quic
            features: "gossipsub request-response quic"
          - name: non-byos | gossipsub + request-response + kad
            features: "gossipsub request-response kad"
          - name: non-byos | gossipsub + quic + kad
            features: "gossipsub quic kad"
          - name: non-byos | request-response + quic + kad
            features: "request-response quic kad"
          # Non-BYOS all
          - name: non-byos | all (gossipsub + request-response + quic + kad)
            features: "gossipsub request-response quic kad"
          # BYOS single (no kad)
          - name: byos | base
            features: "byos"
          - name: byos | gossipsub
            features: "byos gossipsub"
          - name: byos | request-response
            features: "byos request-response"
          - name: byos | quic
            features: "byos quic"
          # BYOS dual
          # gossipsub + request-response
          - name: byos | gossipsub + request-response
            features: "byos gossipsub request-response"
          - name: byos | gossipsub + quic
            features: "byos gossipsub quic"
          - name: byos | request-response + quic
            features: "byos request-response quic"
          # BYOS all (no kad)
          - name: byos | all (gossipsub + request-response + quic)
            features: "byos gossipsub request-response quic"
          # Non-BYOS single + mem-conn-limits-abs
          - name: non-byos | base + mem-conn-limits-abs
            features: "mem-conn-limits-abs "
          - name: non-byos | gossipsub + mem-conn-limits-abs
            features: "mem-conn-limits-abs gossipsub"
          - name: non-byos | request-response + mem-conn-limits-abs
            features: "mem-conn-limits-abs request-response"
          - name: non-byos | quic + mem-conn-limits-abs
            features: "mem-conn-limits-abs quic"
          - name: non-byos | kad + mem-conn-limits-abs
            features: "mem-conn-limits-abs kad"
          # Non-BYOS dual + mem-conn-limits-abs
          - name: non-byos | gossipsub + request-response + mem-conn-limits-abs
            features: "mem-conn-limits-abs gossipsub request-response"
          - name: non-byos | gossipsub + quic + mem-conn-limits-abs
            features: "mem-conn-limits-abs gossipsub quic"
          - name: non-byos | gossipsub + kad + mem-conn-limits-abs
            features: "mem-conn-limits-abs gossipsub kad"
          - name: non-byos | request-response + quic + mem-conn-limits-abs
            features: "mem-conn-limits-abs request-response quic"
          - name: non-byos | request-response + kad + mem-conn-limits-abs
            features: "mem-conn-limits-abs request-response kad"
          - name: non-byos | quic + kad + mem-conn-limits-abs
            features: "mem-conn-limits-abs quic kad"
          # Non-BYOS triple + mem-conn-limits-abs
          - name: non-byos | gossipsub + request-response + quic + mem-conn-limits-abs
            features: "mem-conn-limits-abs gossipsub request-response quic"
          - name: non-byos | gossipsub + request-response + kad + mem-conn-limits-abs
            features: "mem-conn-limits-abs gossipsub request-response kad"
          - name: non-byos | gossipsub + quic + kad + mem-conn-limits-abs
            features: "mem-conn-limits-abs gossipsub quic kad"
          - name: non-byos | request-response + quic + kad + mem-conn-limits-abs
            features: "mem-conn-limits-abs request-response quic kad"
          # Non-BYOS all + mem-conn-limits-abs
          - name: non-byos | all (gossipsub + request-response + quic + kad) + mem-conn-limits-abs
            features: "mem-conn-limits-abs gossipsub request-response quic kad"
          # BYOS single (no kad) + mem-conn-limits-abs
          - name: byos | base + mem-conn-limits-abs
            features: "mem-conn-limits-abs byos"
          - name: byos | gossipsub + mem-conn-limits-abs
            features: "mem-conn-limits-abs byos gossipsub"
          - name: byos | request-response + mem-conn-limits-abs
            features: "mem-conn-limits-abs byos request-response"
          - name: byos | quic + mem-conn-limits-abs
            features: "mem-conn-limits-abs byos quic"
          # BYOS dual
          # gossipsub + request-response + mem-conn-limits-abs
          - name: byos | gossipsub + request-response + mem-conn-limits-abs
            features: "mem-conn-limits-abs byos gossipsub request-response"
          - name: byos | gossipsub + quic + mem-conn-limits-abs
            features: "mem-conn-limits-abs byos gossipsub quic"
          - name: byos | request-response + quic + mem-conn-limits-abs
            features: "mem-conn-limits-abs byos request-response quic"
          # BYOS all (no kad) + mem-conn-limits-abs
          - name: byos | all (gossipsub + request-response + quic) + mem-conn-limits-abs
            features: "mem-conn-limits-abs byos gossipsub request-response quic"
    steps:
      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
      - name: install-rust
        uses: dtolnay/rust-toolchain@b95584d8105b9ab200e15821fa671848cf2b7017 # nightly
        with:
          toolchain: ${{ needs.extract-rust-version.outputs.nightly-version }}
      - name: rust-cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2
        with:
          cache-on-failure: true

      - name: show config
        run: |
          echo "Clippy combo: '${{ matrix.name }}'"
          echo "Features:     '${{ matrix.features }}'"

      - name: clippy (no features)
        if: ${{ matrix.features == '' }}
        env:
          RUSTFLAGS: -D warnings
        run: |
          cargo clippy --workspace --lib --locked --examples --tests --benches --all-targets --no-default-features

      - name: clippy (with features)
        if: ${{ matrix.features != '' }}
        env:
          RUSTFLAGS: -D warnings
        run: |
          cargo clippy --workspace --lib --locked --examples --tests --benches --all-targets --no-default-features --features "${{ matrix.features }}"

  fmt:
    name: Check code formatting
    runs-on: ubuntu-latest
    needs: extract-rust-version
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@b95584d8105b9ab200e15821fa671848cf2b7017 # nightly
        with:
          toolchain: ${{ needs.extract-rust-version.outputs.nightly-version }}
          components: rustfmt

      - name: cargo fmt check
        run: cargo fmt --all --check

  codespell:
    name: Check code spellings
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false

      - name: Run codespell
        uses: codespell-project/actions-codespell@406322ec52dd7b488e48c1c4b82e2a8b3a1bf630 # v2

  taplo:
    name: Lint and check formatting of TOML files
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false

      - name: Install taplo
        run: |
          curl -fsSL https://github.com/tamasfe/taplo/releases/latest/download/taplo-full-linux-x86_64.gz \
            | gzip -d - | install -m 755 /dev/stdin /usr/local/bin/taplo

      - name: Run taplo lint
        run: |
          taplo lint

      - name: Run taplo format check
        run: |
          taplo fmt --check

  lint-success:
    name: Check that lints passed
    runs-on: ubuntu-latest
    if: always()
    needs:
      - clippy
      - fmt
      - codespell
      - taplo
    timeout-minutes: 30
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # release/v1
        with:
          jobs: ${{ toJSON(needs) }}
